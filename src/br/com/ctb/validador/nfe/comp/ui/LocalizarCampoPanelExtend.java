/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CampoPanel.java
 *
 * Created on 13/06/2010, 03:37:05
 */
package br.com.ctb.validador.nfe.comp.ui;

import br.com.ctb.validador.nfe.entities.InfoArq;
import br.com.ctb.validador.nfe.util.JMessageUtil;
import br.com.ctb.validador.nfe.util.SO;
import br.com.jacob.util.StringHelper;
import br.com.swing.componentes.personalizados.util.FilterModel;
import br.com.swing.componentes.personalizados.util.JFileChooserUtil;
import java.awt.Dimension;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JTextField;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author jacob_lisboa
 */
public class LocalizarCampoPanelExtend extends javax.swing.JPanel {

    private FilterModel defaultListModel;

    /** Creates new form CampoPanel */
    public LocalizarCampoPanelExtend() {
        initComponents();
        setLabelText("Label: ");
        setAlterarDimensaoLabel(label.getPreferredSize());
        setAlterarDimensaoField(field.getPreferredSize());
        setName(field.getName());
        setDicatexto(field.getToolTipText());
    }

    // <editor-fold defaultstate="collapsed" desc="setter e getters">
    public FilterModel getDefaultListModel() {
        return defaultListModel;
    }

    public void setDefaultListModel(FilterModel defaultListModel) {
        this.defaultListModel = defaultListModel;
    }

    public boolean isEmptyField() {
        return StringHelper.isBlank(field.getText());
    }

    public void setLabelText(String texto) {
        label.setText(texto);
    }

    public void setDicatexto(String dica) {
        field.setToolTipText(dica);
    }

    public String getDicatexto() {
        return field.getToolTipText();
    }

    public JTextField getField() {
        return field;
    }

    public JLabel getLabel() {
        return label;
    }

    public String getLabelText() {
        return label.getText();
    }

    public void setNomeCampo(String nomeCampo) {
        field.setName(nomeCampo);
    }

    public String getNomeCampo() {
        return field.getName();
    }

    public void setAlterarDimensaoField(Dimension dimension) {
        field.setPreferredSize(dimension);
    }

    public Dimension getAlterarDimensaoField() {
        return field.getPreferredSize();
    }

    public void setAlterarDimensaoLabel(Dimension dimension) {
        label.setPreferredSize(dimension);
    }

    public Dimension getAlterarDimensaoLabel() {
        return label.getPreferredSize();
    }

    // </editor-fold>
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        field = new javax.swing.JTextField();
        localizarButton = new javax.swing.JButton();

        setOpaque(false);
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.PAGE_AXIS));

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

        label.setFont(new java.awt.Font("Tahoma", 1, 11));
        label.setText("Label: ");
        label.setPreferredSize(new java.awt.Dimension(40, 14));
        jPanel1.add(label);

        add(jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        field.setColumns(20);
        field.setEditable(false);
        jPanel2.add(field);

        localizarButton.setText("...");
        localizarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                localizarButtonActionPerformed(evt);
            }
        });
        jPanel2.add(localizarButton);

        add(jPanel2);
    }// </editor-fold>//GEN-END:initComponents

    private void localizarButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_localizarButtonActionPerformed
        
        try {
            JFileChooser chooser = null;
            if (StringHelper.isBlank(field.getText())) {
                chooser = new JFileChooser(System.getProperty("user.home"));
            } else {
                chooser = new JFileChooser(field.getText());
            }

            FileNameExtensionFilter extension = new FileNameExtensionFilter("Arquivo Xml (*.xml)", "xml");
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            chooser.setAcceptAllFileFilterUsed(false);
            chooser.setFileFilter(extension);
            chooser.setFileHidingEnabled(true);
            chooser.setMultiSelectionEnabled(true);

            chooser.setApproveButtonText("Abrir");

            int choice = chooser.showOpenDialog(this);

            if (choice == JFileChooser.APPROVE_OPTION) {
                File oneFile = chooser.getSelectedFile();

                String path = null;
                path = oneFile.getPath();
                String nomeArquivo = StringHelper.substringAfterLast(path, SO.getSepArqSO());
                String caminhoArq = StringHelper.substringBeforeLast(path, SO.getSepArqSO());
                if (defaultListModel.contains(new InfoArq(nomeArquivo, caminhoArq))) {
                    throw new Exception("O arquivo com este mesmo caminho ja existe na lista abaixo!");
                }
                field.setText(path.substring(0, path.lastIndexOf(SO.getSepArqSO())));

                File[] files = chooser.getSelectedFiles();
                for (File file : files) {
                    defaultListModel.addElement(new InfoArq(file.getName(), StringHelper.substringBeforeLast(file.getPath(), SO.getSepArqSO())));
                }


            }
        } catch (Exception ex) {
            ex.printStackTrace();
            JMessageUtil.showInfoMessage(this, ex.getMessage());
        }

    }//GEN-LAST:event_localizarButtonActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField field;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel label;
    private javax.swing.JButton localizarButton;
    // End of variables declaration//GEN-END:variables
}
